name: Deploy to NPM

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTIONS_TOKEN }}
          fetch-depth: 0
          ref: master
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Build project
        run: npm run dist
      - name: Validate build output
        run: |
          if [ ! -d "lib" ]; then
            echo "❌ lib directory not found"
            exit 1
          fi
          if [ ! -d "dist" ]; then
            echo "❌ dist directory not found"
            exit 1
          fi
          echo "✅ Build output validated (lib and dist folders created)"
      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=${CURRENT_VERSION}" >> $GITHUB_ENV
          echo "📦 Publishing version: ${CURRENT_VERSION}"
      - name: Check if version exists on NPM
        id: check_npm
        run: |
          CURRENT_VERSION="${{ env.current_version }}"
          if npm view react-jsonschema-form-extras@${CURRENT_VERSION} version 2>/dev/null; then
            echo "❌ Version ${CURRENT_VERSION} already exists on NPM"
            echo "version_exists=true" >> $GITHUB_ENV
            exit 1
          else
            echo "✅ Version ${CURRENT_VERSION} is new, proceeding with publication"
            echo "version_exists=false" >> $GITHUB_ENV
          fi
      - name: Authenticate with NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
      - name: Publish Release Version
        run: |
          npm publish
          echo "✅ Successfully published version ${{ env.current_version }} to NPM"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
          current_version: ${{ env.current_version }}
        run: |
          gh release create "${{ env.current_version }}" --generate-notes --latest --target master
